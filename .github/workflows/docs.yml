name: Deploy Documentation Site to Pages

on:
  push:
    branches:
      - main
    paths-ignore:
      - .gitignore
      - .eslintignore
      - .eslintrc.json
      - jest.config.ts
      - tsconfig.json
      - tsconfig.build.json
      - package.json
      - pnpm-lock.yaml
      - .github/workflows/release.yml
      - "src/**"
      - "test/**"
    tags-ignore:
      - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./docs
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set package manager
        id: set-package-manager
        run: |
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: ${{ steps.set-package-manager.outputs.manager }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: gatsby
          generator_config_file: ./docs/gatsby-config.ts
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ./docs/public
            ./docs/.cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('public') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-
      - name: Install dependencies
        run: ${{ steps.set-package-manager.outputs.manager }} ${{ steps.set-package-manager.outputs.command }}
      - name: Build with Gatsby
        run: ${{ steps.set-package-manager.outputs.manager }} run build
      - name: Set CNAME
        run: echo "${{ steps.pages.outputs.host }}" > ./public/CNAME
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
